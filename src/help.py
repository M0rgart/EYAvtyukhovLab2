import src.main as main


def help(user_input):
    '''Выводит список команд. Может вывести подробную информацию
    по одной из них.'''
    commands = {'exit', 'help', 'ls', 'cd', 'cat', 'cp', 'mv', 'rm', 'zip', 'unzip', 'tar', 'untar',
                'history', 'undo', 'grep'}
    if user_input == []:
        print(commands)
    else:
        user_input = user_input[0]
        match user_input:
            case 'exit':
                print('Игнорирует все аргументы, завершает код')
            case 'help':
                print('Выводит список команд. Если через пробел указать команду, выведет информацию по ней')
                print('Пример: "help ls"')
            case 'ls':
                print('Выводит содержимое директории, в которой находится пользователь.')
                print('Можно указать оператор "-l", чтобы получить более подробную информацию о всех файлах.')
                print('После команды или опреатора (если он есть), можно указать абсолютный или относительный путь')
                print('к директории. Пример: "ls -l src"')
            case 'cd':
                print('Переход по относительному или абсолютному пути. Поддерживаются:')
                print('- ".." - переход на уровень выше')
                print('- "~" - переход в домашнюю директорию пользователя')
                print('Примеры: "cd ..", "cd ~", "cd src" и "cd C:\\"')
            case 'cat':
                print('Принимает на вход путь к файлу, чтобы вывести его содержимое. Принимает как относительный, ')
                print('так и абсолютный путь к файлу.')
                print('Пример: "cat 123.txt"')
            case 'cp':
                print('Копирует файл из источника в точку назначения. Сначала указывается путь к файлу')
                print('затем указывается путь, куда копировать. Поддерживается "." - текущая директория.')
                print('Для рекурсивного копирования директории введите сразу после самой команды -r')
                print('Если путь содержит пробел, то путь к файлу вводится в двойных кавычках.')
                print('Данную команду можно отменить вызвав: "undo"')
                print('Примеры: "cp 123.txt 123", "cp src\\main.py .", "cp -r "Новая папка" 123"')
            case 'mv':
                print('Перемещает файл\\каталог или переименовывает его.')
                print('Поддерживается как абсолютный, так и относительный путь + "."')
                print('Сначал вводится путь к файлу, затем куда его переместить. Через \\ можно')
                print('указать его новое название (ВНИМАНИЕ: не забывайте указать расширение файла.')
                print('Если путь содержит пробелы, то поместить его в кавычки')
                print('Данную команду можно отменить вызвав: "undo"')
                print('Примеры: "mv 123.txt 321.txt", "mv "123.txt" Новая папка"')
            case 'rm':
                print('Удаляет файл, поддерживает абсолютный и относительный путь')
                print('Поддерживается относительный и абсолютный путь к файлу\\директории')
                print('Для рекурсивного удаления директории указать сразу после команды "-r"')
                print('При удалении директории будет задан вопрос требующий ')
                print('подтвержить\\отменить удаление(y\\n - соответственно)')
                print('Файл на время перемещается в директорию trash => до выключению кода')
                print('данную команду можно отменить вызвав: "undo"')
                print('Примеры: "rm 123.txt", ""')
            case 'zip':
                print('Создает из указанного файла zip-файл с указанным названием')
                print('Поддерживает относительный и абсолютный путь.')
                print('Новый архив помещается в EYAvtyukhovLab2\src')
                print('Пример: "zip src\\123 123.zip"')
            case 'tar':
                print('Создает из указанного файла tar-файл с указанным названием')
                print('Поддерживает относительный и абсолютный путь.')
                print('Новый архив помещается в EYAvtyukhovLab2\src')
                print('Пример: "tar src\\123 123.tar"')
            case 'unzip':
                print('Разархивирует zip-файл. Принимает абсолютный и относительный путь')
            case 'untar':
                print('Разархивирует tar-файл. Принимает абсолютный и относительный путь')
            case 'history':
                print('Выводит последние 10 команд')
            case 'undo':
                print('Способна отменить действие rm, mb и cp')
                print('Хранит последние 3 команды из списка выше')
            case 'grep':
                print('Поиск в файле или директории по патернну. Патерн задается как регулярное выражение')
                print('При указании -i - игнорирует индексы. При -r - ищет рекурсивно (во всех подкаталогах)')
                print('Примеры: "grep -i -r "абв" src", "grep "123" C:\\')




if __name__ == "__main__":
    main.main()